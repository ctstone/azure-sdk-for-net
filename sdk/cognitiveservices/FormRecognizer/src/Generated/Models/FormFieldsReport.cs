// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.FormRecognizer.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Report for a custom model training field.
    /// </summary>
    public partial class FormFieldsReport
    {
        /// <summary>
        /// Initializes a new instance of the FormFieldsReport class.
        /// </summary>
        public FormFieldsReport()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FormFieldsReport class.
        /// </summary>
        /// <param name="fieldName">Training field name.</param>
        /// <param name="accuracy">Estimated extraction accuracy for this
        /// field.</param>
        public FormFieldsReport(string fieldName, double accuracy)
        {
            FieldName = fieldName;
            Accuracy = accuracy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets training field name.
        /// </summary>
        [JsonProperty(PropertyName = "fieldName")]
        public string FieldName { get; set; }

        /// <summary>
        /// Gets or sets estimated extraction accuracy for this field.
        /// </summary>
        [JsonProperty(PropertyName = "accuracy")]
        public double Accuracy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FieldName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FieldName");
            }
        }
    }
}
